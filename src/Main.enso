from Standard.Base import all
from Standard.Table import all
from Standard.Database import all
from Standard.AWS import all
from Standard.Google_Api import all
from Standard.Snowflake import all
import Standard.Visualization

download_extract url event_details =
    IO.println "Fetching "+url.to_text
    operator50103 = Data.fetch url
    IO.println "Done fetching "+url.to_text
    operator64062 = operator50103.decode_as_text
    operator39794 = operator64062.lines
    operator75987 = 'href="('+event_details+'[^\"]+)[^>]*>'
    operator15026 = operator75987.to_regex
    operator42699 = operator39794.filter (Filter_Condition.Contains event_details)
    operator52211 = operator15026.match
    operator96845 = operator42699.map operator52211
    operator86202 = operator96845.distinct
    operator48961 = operator86202.filter Filter_Condition.Not_Nothing
    operator40434 = operator48961.map m-> m.at 1
    operator14852 = operator40434.distinct
    operator14852

download_results competition =
    IO.println "Fetching "+competition.to_text
    operator32357 = Data.fetch competition
    IO.println "Done fetching "+competition.to_text
    operator18222 = operator32357.decode_as_text
    operator36399 = operator18222.contains "No results found for this competition."
    operator16594 = operator36399.if_then_else "No Results" (Main.parse_results operator18222)
    operator16594

parse_results operator18222 =
    operator1419 = operator18222.lines
    operator29807 = operator1419.find t-> t.contains "<title>"
    operator80108 = operator29807.replace (regex "</?title>") ''
    operator45914 = operator1419.find t-> t.contains 'class=\"date__short\"'
    operator3502 = operator45914.replace (regex "^.*?>|<.*?$") ''
    operator80228 = operator3502.parse_date 'MMM d, yyyy'
    operator93666 = operator1419.to_table
    operator49875 = operator93666.add_row_number from=0
    operator70297 = operator1419.index_of t-> t.contains '#events-info-results\"'
    operator27041 = operator49875.filter 'Row' (Filter_Condition.Equal_Or_Greater operator70297)
    operator43989 = operator27041.set (expr 'if contains([Value], \"<a class=\"\"table-row\") then 1 else Nothing') 'RowChange'
    operator45124 = operator43989.at 'RowChange'
    operator15701 = operator45124.running Statistic.Sum 'RowID'
    operator62604 = operator43989.set operator15701
    operator56965 = operator62604.set (expr 'if contains([Value], \"</a>\") then -1 else Nothing') 'RowEnd'
    operator33825 = operator56965.fill_nothing ['RowChange'] (Column_Ref.Name 'RowEnd')
    operator39679 = operator33825.at 'RowChange'
    operator55617 = operator39679.running Statistic.Sum 'RowState'
    operator19058 = operator33825.set operator55617
    operator8036 = operator19058.filter 'RowState' (Filter_Condition.Equal 1)
    operator93440 = operator8036.aggregate ['RowID'] [Aggregate_Column.Concatenate 'Value' 'HTML']
    operator66119 = operator93440.at 'HTML'
    operator16709 = operator66119 + "</a>"
    operator34690 = x-> x.get_xpath 'a/div/div/div' . map n->n.text.trim
    operator57467 = operator1419.index_of t-> t.contains 'id=\"events-info-results\"'
    operator710 = operator57467 - 1
    operator38009 = operator27041.filter 'Row' (Filter_Condition.Less operator710)
    operator42986 = operator38009.aggregate [] [Aggregate_Column.Concatenate separator='']
    operator91376 = operator42986.get_value
    operator84213 = XML_Document.from_text (operator91376.replace "<br>" " " . replace "&nbsp;" " " . replace (regex "<!--.*?-->") "")
    operator2194 = operator84213.get_xpath 'div/div/div/div/div'
    operator80016 = operator2194.map n-> n.text.trim
    operator88173 = operator80016.to_table
    operator29547 = operator88173.add_row_number 'Field'
    operator76232 = operator16709.to_vector
    operator18288 = operator76232.map (t-> XML_Document.from_text (t.replace "<br>" " " . replace "&nbsp;" " " . replace "&nbsp" " " . replace (regex "<!--.*?-->") ""))
    operator17654 = operator18288.map operator34690
    operator87908 = operator17654.map t->(if t == "" then Nothing else t)
    operator9307 = operator93440.set operator87908 'Values'
    operator26253 = operator9307.remove_columns ['HTML']
    operator75691 = operator26253.expand_to_rows 'Values'
    operator93423 = operator75691.add_row_number 'Field' group_by=['RowID']
    operator33244 = operator93423.join operator29547 Join_Kind.Inner [(Join_Condition.Equals 'Field')]
    operator24575 = operator33244.cross_tab ['RowID'] 'Value' (Aggregate_Column.First 'Values')
    operator24493 = operator24575.set operator80108 'Event Name'
    operator42758 = operator24493.set operator80228 'Date'
    operator42758

main =
    file = enso_project.data/'FISResults2024.csv'
    season = "2024"

    IO.println "Downloading snowboarding "+season.to_text+" into "+file.to_text

    url = "https://www.fis-ski.com/DB/snowboard/alpine-snowboard/calendar-results.html?noselection=true&disciplinecode=SG%2CPGS%2CPSL%2CGS%2CSL%2CPRT&seasoncode="+season
    event_details = "https://www.fis-ski.com/DB/general/event-details.html"
    operator40434 = Main.download_extract url event_details
    operator93261 = Main.download_extract _ "https://www.fis-ski.com/DB/general/results.html"
    operator23138 = operator40434.flat_map operator93261
    operator32661 = operator23138.map Main.download_results Problem_Behavior.Ignore
    operator2795 = operator32661.zip operator23138
    operator7141 = operator2795.filter p->p.first.is_nothing.not
    operator97472 = operator7141.filter p-> p.first != "No Results"
    operator97598 = operator97472.map p-> p.first.set p.second "URL"
    operator93079 = operator97598.map t-> t.rename_columns (t.column_names.map .trim)
    operator21858 = Table.from_union operator93079 Match_Columns.By_Name Boolean.True
    operator13633 = operator21858.parse
    operator62651 = operator2795.filter p->p.first.is_nothing
    operator88386 = operator62651.map .second
    result = operator13633.write file
    IO.println "Finished "+result.to_text
